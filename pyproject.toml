[tool.poetry]
name = "langchain-api"
version = "0.3.0"
description = ""
authors = ["Yossef-Dawoad <yossefdawoad15@gmail.com>"]
license = "Apache-2.0 license"
readme = "README.md"
packages = [{include = "langchain_api"}]

[tool.poetry.dependencies]
python = "^3.9"
langchain = "^0.0.252"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
aiosqlite = "^0.19.0"
alembic = "^1.11.1"
bcrypt = "^4.0.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
SQLAlchemy = "^2.0.19"
python-dotenv = "^1.0.0"
fastapi = {extras = ["all"], version = "^0.99.0"}
huggingface-hub = "^0.16.4"
sse-starlette = "^1.6.1"
text-generation = "^0.6.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.7.0"
ruff = "^0.0.280"
pre-commit = "^3.3.3"
flake8 = "^6.0.0"
poetry = "^1.5.1"


[tool.ruff]
extend-select = [
    'C4',
    "F",   # pyflakes
    "E", # Errors
    "W", # warnnings
    "RUF", # Ruff-specific rules
    "PERF", #PREFlint
    "PL", # PYLINT
    "UP",  # pyupgrade
    'SIM', #sim for code simplification
    'TCH', #tch for type checking
    'F707', # Syntax error in forward annotation
    'I001', # Import block is un-sorted or un-formatted
    'I002', # Missing required import:
    'COM', # FLAKE COMMA
    'ANN', # flake8-annotations
    'PYI052', #Need type annotation for
    'DTZ', #FLAKE datetime
    'ASYNC', #FLAKE ASYNC
    'PLE1700'
]
# fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
show-fixes = true
target-version = "py310"
line-length = 88
ignore = ['E501', 'SIM115', 'ANN101', "UP007"]


[tool.black]
line-length = 88
target-version = ["py310"]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | alembic
  | config.py
  )/
  '''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
